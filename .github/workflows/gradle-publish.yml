# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  push:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "$AWS_SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.AWS_ECR_REGISTRY_IP }} >> ~/.ssh/known_hosts

    - name: Run Remote Command on AWS
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AWS_ECR_REGISTRY_IP }}
        username: ec2-user  # Change this to your AWS service's SSH username
        key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
        script: |
          # Add your remote commands here
          echo "Hello from AWS service!"
    
    
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
     
     
    

      
    - name: login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}  
    
    - name: Build with Gradle
      run: ./gradlew vaadinBuildFrontend build
     
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/crm-vaadin:latest

    
